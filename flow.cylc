#!Jinja2

{% set ADMIN_EMAILS="prajeesh.athippattagopinathan@kaust.edu.sa" %}
{% set CONDA_PREFIX_PATH="/home/athippp/micromamba/seasS" %}
{% set CONDA_CMD="micromamba" %}
{% set DATA_ROOT="/home/athippp/DATA/seasS" %}
{% set VIZ_SERVER_PATH="KW61469:/home/pammirp/data/live/ncm/seasonal/" %}

[task parameters]

[scheduling]
    initial cycle point = 2025-01-02T00:00:00
    [[queues]]
        [[[get_fcst_queue]]]
            limit=2
            members = GET_FCST

    [[graph]]
        R1 = """
            install_pkgs
        """

        P1M = """
            {% for lstart in range(1, 5) %}
            {% for lend in range(2 + lstart, 7) %}
            @wall_clock & install_pkgs[^] => get_fcst_L{{lstart}}_{{lend}} => process_freq_L{{lstart}}_{{lend}} => push_data_L{{lstart}}_{{lend}} => notify
            {% endfor %}
            {% endfor %}
        """

[runtime]
    [[root]]
        execution retry delays = 2*PT2M
        [[[mail]]]
            to = {{ ADMIN_EMAILS }}
        [[[events]]]
            mail events = failed
        [[[environment]]]
            ETC_DIR=${CYLC_WORKFLOW_RUN_DIR}/etc
            PYTHON={{CONDA_PREFIX_PATH}}/bin/python

            year=${CYLC_TASK_CYCLE_POINT:0:4}
            month=${CYLC_TASK_CYCLE_POINT:4:2}




    [[install_pkgs]]
        script = """
            {{CONDA_CMD}} create -f $ETC_DIR/env.yaml -p {{CONDA_PREFIX_PATH}} -y
        """

    [[notify]]
        script = """
            create_param_json.sh
            rsync -P param.json {{VIZ_SERVER_PATH}}
        """
        [[[events]]] 
            mail events = succeeded

    [[GET_FCST]]
        execution retry delays = 10*P1D

{% for lstart in range(1, 5) %}
{% for lend in range(2 + lstart, 7) %}
    [[get_fcst_L{{lstart}}_{{lend}}]]
        script = """
            $PYTHON -c 'import seasS; seasS.app()' get-fcst-data ${year} ${month} {{lstart}} {{lend}} {{DATA_ROOT}}
        """
        inherit = GET_FCST
    
    [[process_freq_L{{lstart}}_{{lend}}]] 
        script = """
            $PYTHON -c 'import seasS; seasS.app()' process-mme-freq ${year} ${month} {{lstart}} {{lend}} {{DATA_ROOT}}
        """ 
    
    [[push_data_L{{lstart}}_{{lend}}]] 
        script = """
            data_path=$($PYTHON -c 'import seasS; seasS.app()' mme-freq-path ${year} ${month} {{lstart}} {{lend}} {{DATA_ROOT}})
            echo push $data_path to {{VIZ_SERVER_PATH}}
            rsync -P $data_path {{VIZ_SERVER_PATH}}
        """
{% endfor %}
{% endfor %}

